#!/bin/bash

echo "Test Hook"

## this will retrieve all of the .go files that have been 
## changed since the last commit
STAGED_GO_FILES=$(git diff --cached --name-only -- '*.go')
## we can check to see if this is empty
if [[ $STAGED_GO_FILES == "" ]]; then
    printf "[HOOK] No Go Files to Update\n\n"
## otherwise we can do stuff with these changed go files
else

    echo "[HOOK] Linting all go files..."
    lint_count=`make lint 2>&1 | wc -l`
    if [ $lint_count -gt 0 ]; then
        echo "[HOOK] Error -> Some files aren't passing lint. Run make lint"
        exit 1
    fi

    echo "[HOOK] Finding suspicious go files..."
    lint_count=`make vet 2>&1 | wc -l`
    if [ $lint_count -gt 0 ]; then
        echo "[HOOK] Error -> Some files aren't passing check. Run make vet"
        exit 1
    fi
    
    echo "[HOOK] Testing all go files..."
    error_count=`make test-unit 2>&1 | grep "FAIL"| wc -l`
    if [ $error_count -gt 0 ]; then
        echo "[HOOK] Error -> Some files aren't passing test. Run make test-unit"
        exit 1
    fi

    echo "[HOOK] Format all go files..."
    for file in $STAGED_GO_FILES; do
        ## format our file
        go fmt $file
        ## add any potential changes from our formatting to the 
        ## commit
        git add $file
    done
    printf "[HOOK]  Commit succeeded\n\n"
fi